(*@PROPERTIES_EX@
TYPE: POU
LOCALE: 0
IEC_LANGUAGE: ST
PLC_TYPE: independent
PROC_TYPE: independent
GROUP: AIO
*)
(*@KEY@:DESCRIPTION*)

(*@KEY@:END_DESCRIPTION*)
PROGRAM AI

(*Group:NewGroup*)


VAR_EXTERNAL
	AI :	SENSOR;
	A04_IN0 :	INT;
	A04_IN1 :	INT;
	A04_IN2 :	INT;
	A04_IN3 :	INT;
	A04_IN4 :	INT;
	A04_IN5 :	INT;
	A04_IN6 :	INT;
	A04_IN7 :	INT;
	A05_IN0 :	INT;
	A05_IN1 :	INT;
	A05_IN2 :	INT;
	A05_IN3 :	INT;
	A05_IN4 :	INT;
	A05_IN5 :	INT;
	A05_IN6 :	INT;
	A05_IN7 :	INT;
	A06_IN0 :	INT;
	A06_IN1 :	INT;
	A06_IN2 :	INT;
	A06_IN3 :	INT;
	A06_IN4 :	INT;
	A06_IN5 :	INT;
END_VAR


VAR
	SensorsFB :	SensorFB;
	i :	INT;
	AI_Buff :	SENSOR_BUFF;
END_VAR


VAR_EXTERNAL
	AI_Event :	SENSOR_EVENT;
	A16_IN0 :	INT;
	A16_IN1 :	INT;
	A16_IN2 :	INT;
	A16_IN3 :	INT;
	A16_IN4 :	INT;
	A16_IN5 :	INT;
	A16_IN6 :	INT;
	A16_IN7 :	INT;
	A17_IN0 :	INT;
	A17_IN1 :	INT;
	A17_IN2 :	INT;
	A17_IN3 :	INT;
	A17_IN4 :	INT;
	A17_IN5 :	INT;
	A17_IN6 :	INT;
	A17_IN7 :	INT;
	A18_IN0 :	INT;
	A18_IN1 :	INT;
	A18_IN2 :	INT;
	A18_IN3 :	INT;
	A18_IN4 :	INT;
	A18_IN5 :	INT;
	A18_IN6 :	INT;
	A18_IN7 :	INT;
	A19_IN0 :	INT;
	A19_IN1 :	INT;
	A19_IN2 :	INT;
	A19_IN3 :	INT;
	A19_IN4 :	INT;
	A19_IN5 :	INT;
	A19_IN6 :	INT;
	A19_IN7 :	INT;
	A110_IN0 :	INT;
	A110_IN1 :	INT;
	A110_IN2 :	INT;
	A110_IN3 :	INT;
	A110_IN4 :	INT;
	A110_IN5 :	INT;
	A110_IN6 :	INT;
	A110_IN7 :	INT;
	A111_IN0 :	INT;
	A111_IN1 :	INT;
	A111_IN2 :	INT;
	A111_IN3 :	INT;
	A111_IN4 :	INT;
	A111_IN5 :	INT;
	A111_IN6 :	INT;
	A111_IN7 :	INT;
	A112_IN0 :	INT;
	A112_IN1 :	INT;
	A112_IN2 :	INT;
	A112_IN3 :	INT;
	A112_IN4 :	INT;
	A112_IN5 :	INT;
	A112_IN6 :	INT;
	A112_IN7 :	INT;
	A113_IN0 :	INT;
	A113_IN1 :	INT;
	A113_IN2 :	INT;
	A113_IN3 :	INT;
	A113_IN4 :	INT;
	A113_IN5 :	INT;
	A113_IN6 :	INT;
	A113_IN7 :	INT;
	A114_IN0 :	INT;
	A114_IN1 :	INT;
	A114_IN2 :	INT;
	A114_IN3 :	INT;
	A114_IN4 :	INT;
	A114_IN5 :	INT;
	A114_IN6 :	INT;
	A114_IN7 :	INT;
	A115_IN0 :	INT;
	A115_IN1 :	INT;
	A115_IN2 :	INT;
	A115_IN3 :	INT;
	A115_IN4 :	INT;
	A115_IN5 :	INT;
	A115_IN6 :	INT;
	A115_IN7 :	INT;
	A06_IN7 :	INT;
	A06_IN6 :	INT;
	AI_AUX :	SENSOR_MISC;
	SlvData_RSUNI_2 :	MBRTU_SlvData;
END_VAR


VAR
	MB_TO_REAL :	MB_TO_REAL;
END_VAR


(*@KEY@: WORKSHEET
NAME: AI
IEC_LANGUAGE: ST
*)
(*============================================================================*)
	(*PT5100 Pump 5.1 input pressure sensor*)
(*============================================================================*)
AI[0].PIW:= A04_IN0;
AI[0].DiagCode:= int_to_word(A04_IN0);
AI[0].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT5101 Pump 5.1 output pressure sensor*)
(*============================================================================*)
AI[1].PIW:= A04_IN1;
AI[1].DiagCode:= int_to_word(A04_IN1);
AI[1].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT5200 Pump 5.2 input pressure sensor*)
(*============================================================================*)
AI[2].PIW:= A04_IN2;
AI[2].DiagCode:= int_to_word(A04_IN2);
AI[2].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT5201 Pump 5.2 output pressure sensor*)
(*============================================================================*)
AI[3].PIW:= A04_IN3;
AI[3].DiagCode:= int_to_word(A04_IN3);
AI[3].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT5300 Pump 5.3 input pressure sensor*)
(*============================================================================*)
AI[4].PIW:= A04_IN4;
AI[4].DiagCode:= int_to_word(A04_IN4);
AI[4].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT5301 Pump 5.3 output pressure sensor*)
(*============================================================================*)
AI[5].PIW:= A04_IN5;
AI[5].DiagCode:= int_to_word(A04_IN5);
AI[5].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT009  Pumps 5 input collector pressure sensor*)
(*============================================================================*)
AI[6].PIW:= A04_IN6;
AI[6].DiagCode:= int_to_word(A04_IN6);
AI[6].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT010  Pumps 5 output collector pressure sensor*)
(*============================================================================*)
AI[7].PIW:= A04_IN7;
AI[7].DiagCode:= int_to_word(A04_IN7);
AI[7].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT001  Boiler 1.1 output temperature sensor*)
(*============================================================================*)
AI[8].PIW:= A05_IN0;
AI[8].DiagCode:= int_to_word(A05_IN0);
AI[8].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT002  Boiler 1.1 output pressure sensor*)
(*============================================================================*)
AI[9].PIW:= A05_IN1;
AI[9].DiagCode:= int_to_word(A05_IN1);
AI[9].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT003  Boiler 1.1 input temperature sensor*)
(*============================================================================*)
AI[10].PIW:= A05_IN2;
AI[10].DiagCode:= int_to_word(A05_IN2);
AI[10].ADC_Range:= 30000;
AI[10].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT004  Boiler 1.1 input pressure sensor*)
(*============================================================================*)
AI[11].PIW:= A05_IN3;
AI[11].DiagCode:= int_to_word(A05_IN3);
AI[11].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT005  Boiler 1.2 output temperature sensor*)
(*============================================================================*)
AI[12].PIW:= A05_IN4;
AI[12].DiagCode:= int_to_word(A05_IN4);
AI[12].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT006  Boiler 1.2 output pressure sensor*)
(*============================================================================*)
AI[13].PIW:= A05_IN5;
AI[13].DiagCode:= int_to_word(A05_IN5);
AI[13].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT007  Boiler 1.2 input temperature sensor*)
(*============================================================================*)
AI[14].PIW:= A05_IN6;
AI[14].DiagCode:= int_to_word(A05_IN6);
AI[14].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT008  Boiler 1.2 input pressure sensor*)
(*============================================================================*)
AI[15].PIW:= A05_IN7;
AI[15].DiagCode:= int_to_word(A05_IN7);
AI[15].CW.bar_kgf:= true;

(*============================================================================*)
	(*UZ5100AO FC actual frequency*)
(*============================================================================*)
AI[16].PIW:= A06_IN0;
AI[16].DiagCode:= int_to_word(A06_IN0);
AI[16].CW.bar_kgf:= false;
AI[16].Ymin:= 0.0;
AI[16].Ymax:= 50.0;

(*============================================================================*)
	(*UZ5200AO FC actual frequency*)
(*============================================================================*)
AI[17].PIW:= A06_IN1;
AI[17].DiagCode:= int_to_word(A06_IN1);
AI[17].CW.bar_kgf:= false;
AI[17].Ymin:= 0.0;
AI[17].Ymax:= 50.0;

(*============================================================================*)
	(*UZ5300AO FC actual frequency*)
(*============================================================================*)
AI[18].PIW:= A06_IN2;
AI[18].DiagCode:= int_to_word(A06_IN2);
AI[18].CW.bar_kgf:= false;
AI[18].Ymin:= 0.0;
AI[18].Ymax:= 50.0;

(*============================================================================*)
	(*PT011  Boiler 1.1 gas pressure sensor*)
(*============================================================================*)
AI[19].PIW:= A06_IN3;
AI[19].DiagCode:= int_to_word(A06_IN3);
AI[19].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT012  Boiler 1.2 gas pressure sensor*)
(*============================================================================*)
AI[20].PIW:= A06_IN4;
AI[20].DiagCode:= int_to_word(A06_IN4);
AI[20].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT013 Heat carrier feed temperature sensor*)
(*============================================================================*)
AI[21].PIW:= A06_IN5;
AI[21].DiagCode:= int_to_word(A06_IN5);
AI[21].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[22].PIW:= A06_IN6;
AI[22].DiagCode:= int_to_word(A06_IN6);
AI[22].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[23].PIW:= A06_IN7;
AI[23].DiagCode:= int_to_word(A06_IN7);
AI[23].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT1106 Boiler 1.1 smoke temperature sensor*)
(*============================================================================*)
AI[24].PIW:= A16_IN0;
AI[24].DiagCode:= int_to_word(A16_IN0);
AI[24].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT1206 Boiler 1.2 smoke temperature sensor*)
(*============================================================================*)
AI[25].PIW:= A16_IN1;
AI[25].DiagCode:= int_to_word(A16_IN1);
AI[25].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT1306 Boiler 1.3 smoke temperature sensor*)
(*============================================================================*)
AI[26].PIW:= A16_IN2;
AI[26].DiagCode:= int_to_word(A16_IN2);
AI[26].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT3-2 Gas pressure sensor (for boiler 1.3)*)
(*============================================================================*)
AI[27].PIW:= A16_IN3;
AI[27].DiagCode:= int_to_word(A16_IN3);
AI[27].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT009 Boiler 1.3 output water temperature sensor*)
(*============================================================================*)
AI[28].PIW:= A16_IN4;
AI[28].DiagCode:= int_to_word(A16_IN4);
AI[28].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT015 Boiler 1.3 output water pressure sensor*)
(*============================================================================*)
AI[29].PIW:= A16_IN5;
AI[29].DiagCode:= int_to_word(A16_IN5);
AI[29].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT011 Boiler 1.3 input temperature sensor*)
(*============================================================================*)
AI[30].PIW:= A16_IN6;
AI[30].DiagCode:= int_to_word(A16_IN6);
AI[30].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT012 Boiler 1.3 input pressure sensor*)
(*============================================================================*)
AI[31].PIW:= A16_IN7;
AI[31].DiagCode:= int_to_word(A16_IN7);
AI[31].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT014 Boilers 1.x output water pressure sensor*)
(*============================================================================*)
AI[32].PIW:= A17_IN0;
AI[32].DiagCode:= int_to_word(A17_IN0);
AI[32].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT2103 Boiler 2.1 smoke temperature sensor*)
(*============================================================================*)
AI[33].PIW:= A17_IN1;
AI[33].DiagCode:= int_to_word(A17_IN1);
AI[33].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT2105 Boiler 2.1 output pressure sensor*)
(*============================================================================*)
AI[34].PIW:= A17_IN2;
AI[34].DiagCode:= int_to_word(A17_IN2);
AI[34].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT2107 Boiler 2.1 output temperature sensor*)
(*============================================================================*)
AI[35].PIW:= A17_IN3;
AI[35].DiagCode:= int_to_word(A17_IN3);
AI[35].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT4-2 Gas pressure sensor (for boiler 2.1)*)
(*============================================================================*)
AI[36].PIW:= A17_IN4;
AI[36].DiagCode:= int_to_word(A17_IN4);
AI[36].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT2203 Boiler 2.2 smoke temperature sensor*)
(*============================================================================*)
AI[37].PIW:= A17_IN5;
AI[37].DiagCode:= int_to_word(A17_IN5);
AI[37].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT2205 Boiler 2.2 output pressure sensor*)
(*============================================================================*)
AI[38].PIW:= A17_IN6;
AI[38].DiagCode:= int_to_word(A17_IN6);
AI[38].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT2207 Boiler 2.2 output temperature sensor*)
(*============================================================================*)
AI[39].PIW:= A17_IN7;
AI[39].DiagCode:= int_to_word(A17_IN7);
AI[39].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT5-2 Gas pressure sensor (for boiler 2.2)*)
(*============================================================================*)
AI[40].PIW:= A18_IN0;
AI[40].DiagCode:= int_to_word( A18_IN0);
AI[40].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT2001 Boilers 2.x input temperature sensor*)
(*============================================================================*)
AI[41].PIW:= A18_IN1;
AI[41].DiagCode:= int_to_word(A18_IN1);
AI[41].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT2002 Boilers 2.x input pressure sensor*)
(*============================================================================*)
AI[42].PIW:= A18_IN2;
AI[42].DiagCode:= int_to_word(A18_IN2);
AI[42].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT2003 Boilers 2.x output temperature sensor*)
(*============================================================================*)
AI[43].PIW:= A18_IN3;
AI[43].DiagCode:= int_to_word(A18_IN3);
AI[43].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT2004 Boilers 2.x output pressure sensor*)
(*============================================================================*)
AI[44].PIW:= A18_IN4;
AI[44].DiagCode:= int_to_word(A18_IN4);
AI[44].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT3000 Pumps 3.x input collector pressure sensor*)
(*============================================================================*)
AI[45].PIW:= A18_IN5;
AI[45].DiagCode:= int_to_word(A18_IN5);
AI[45].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT3100 Pump 3.1 input pressure sensor*)
(*============================================================================*)
AI[46].PIW:= A18_IN6;
AI[46].DiagCode:= int_to_word(A18_IN6);
AI[46].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT3101 Pump 3.1 output pressure sensor*)
(*============================================================================*)
AI[47].PIW:= A18_IN7;
AI[47].DiagCode:= int_to_word(A18_IN7);
AI[47].CW.bar_kgf:= true;

(*============================================================================*)
	(*UZ3100AO FC actual frequency*)
(*============================================================================*)
AI[48].PIW:= A19_IN0;
AI[48].DiagCode:= int_to_word(A19_IN0);
AI[48].CW.bar_kgf:= false;
AI[48].Ymin:= 0.0;
AI[48].Ymax:= 50.0;

(*============================================================================*)
	(*PT3200 Pump 3.2 input pressure sensor*)
(*============================================================================*)
AI[49].PIW:= A19_IN1;
AI[49].DiagCode:= int_to_word(A19_IN1);
AI[49].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT3201 Pump 3.2 output pressure sensor*)
(*============================================================================*)
AI[50].PIW:= A19_IN2;
AI[50].DiagCode:= int_to_word(A19_IN2);
AI[50].CW.bar_kgf:= true;

(*============================================================================*)
	(*UZ3200AO FC actual frequency*)
(*============================================================================*)
AI[51].PIW:= A19_IN3;
AI[51].DiagCode:= int_to_word(A19_IN3);
AI[51].CW.bar_kgf:= false;
AI[51].Ymin:= 0.0;
AI[51].Ymax:= 50.0;

(*============================================================================*)
	(*PT3300 Pump 3.3 input pressure sensor*)
(*============================================================================*)
AI[52].PIW:= A19_IN4;
AI[52].DiagCode:= int_to_word(A19_IN4);
AI[52].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT3301 Pump 3.3 output pressure sensor*)
(*============================================================================*)
AI[53].PIW:= A19_IN5;
AI[53].DiagCode:= int_to_word(A19_IN5);
AI[53].CW.bar_kgf:= true;

(*============================================================================*)
	(*UZ3300AO FC actual frequency*)
(*============================================================================*)
AI[54].PIW:= A19_IN6;
AI[54].DiagCode:= int_to_word(A19_IN6);
AI[54].CW.bar_kgf:= false;
AI[54].Ymin:= 0.0;
AI[54].Ymax:= 50.0;

(*============================================================================*)
	(*PT3004 Pumps 3.x output collector pressure sensor*)
(*============================================================================*)
AI[55].PIW:= A19_IN7;
AI[55].DiagCode:= int_to_word(A19_IN7);
AI[55].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT3005 Pumps 3.x output collector temperature sensor*)
(*============================================================================*)
AI[56].PIW:= A110_IN0;
AI[56].DiagCode:= int_to_word(A110_IN0);
AI[56].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT5001 Filter A4 input temperature sensor*)
(*============================================================================*)
AI[57].PIW:= A110_IN1;
AI[57].DiagCode:= int_to_word(A110_IN1);
AI[57].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT5002 Filter A4 input pressure sensor*)
(*============================================================================*)
AI[58].PIW:= A110_IN2;
AI[58].DiagCode:= int_to_word(A110_IN2);
AI[58].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT5005 Filter A4 output pressure sensor*)
(*============================================================================*)
AI[59].PIW:= A110_IN3;
AI[59].DiagCode:= int_to_word(A110_IN3);
AI[59].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT7001*)
(*============================================================================*)
AI[60].PIW:= A110_IN4;
AI[60].DiagCode:= int_to_word(A110_IN4);
AI[60].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT7003 Feed T12 pressure sensor (before accounting unit)*)
(*============================================================================*)
AI[61].PIW:= A110_IN5;
AI[61].DiagCode:= int_to_word(A110_IN5);
AI[61].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT7005 External temperature sensor*)
(*============================================================================*)
AI[62].PIW:= A110_IN6;
AI[62].DiagCode:= int_to_word(A110_IN6);
AI[62].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT7006 Internal temperature sensor*)
(*============================================================================*)
AI[63].PIW:= A110_IN7;
AI[63].DiagCode:= int_to_word(A110_IN7);
AI[63].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT8019 Hot water feed temperature sensor*)
(*============================================================================*)
AI[64].PIW:= A111_IN0;
AI[64].DiagCode:= int_to_word(A111_IN0);
AI[64].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT8017 Hot water feed pressure sensor*)
(*============================================================================*)
AI[65].PIW:= A111_IN1;
AI[65].DiagCode:= int_to_word(A111_IN0);
AI[65].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT8007 Heat exchanger 8 cold water input pressure sensor*)
(*============================================================================*)
AI[66].PIW:= A111_IN2;
AI[66].DiagCode:= int_to_word(A111_IN2);
AI[66].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT8008 Heat exchanger 8 cold water input temperature sensor*)
(*============================================================================*)
AI[67].PIW:= A111_IN3;
AI[67].DiagCode:= int_to_word(A111_IN3);
AI[67].CW.bar_kgf:= false;

(*============================================================================*)
	(*TT8001 Pipeline T4 hot water input temperature sensor*)
(*============================================================================*)
AI[68].PIW:= A111_IN4;
AI[68].DiagCode:= int_to_word(A111_IN4);
AI[68].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT8002 Pipeline T4 hot water input pressure sensor*)
(*============================================================================*)
AI[69].PIW:= A111_IN5;
AI[69].DiagCode:= int_to_word(A111_IN5);
AI[69].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT8020 Pumps 6.x input pressure sensor*)
(*============================================================================*)
AI[70].PIW:= A111_IN6;
AI[70].DiagCode:= int_to_word(A111_IN6);
AI[70].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT8021 Pumps 6.x output pressure sensor*)
(*============================================================================*)
AI[71].PIW:= A111_IN7;
AI[71].DiagCode:= int_to_word(A111_IN7);
AI[71].CW.bar_kgf:= true;

(*============================================================================*)
	(*UZ6100AO FC actual frequency*)
(*============================================================================*)
AI[72].PIW:= A112_IN0;
AI[72].DiagCode:= int_to_word(A112_IN0);
AI[72].CW.bar_kgf:= false;
AI[72].Ymin:= 0.0;
AI[72].Ymax:= 50.0;

(*============================================================================*)
	(*UZ6200AO FC actual frequency*)
(*============================================================================*)
AI[73].PIW:= A112_IN1;
AI[73].DiagCode:= int_to_word(A112_IN1);
AI[73].CW.bar_kgf:= false;
AI[73].Ymin:= 0.0;
AI[73].Ymax:= 50.0;

(*============================================================================*)
	(*TT9008 Heat exchanger 9 hot water output temperature sensor*)
(*============================================================================*)
AI[74].PIW:= A112_IN2;
AI[74].DiagCode:= int_to_word(A112_IN2);
AI[74].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT9010 Heat exchanger 5 supply water input pressure sensor*)
(*============================================================================*)
AI[75].PIW:= A112_IN3;
AI[75].DiagCode:= int_to_word(A112_IN3);
AI[75].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT0019 Water preparation unit output pressure sensor*)
(*============================================================================*)
AI[76].PIW:= A112_IN4;
AI[76].DiagCode:= int_to_word(A112_IN4);
AI[76].CW.bar_kgf:= true;

(*============================================================================*)
	(*PT0022 Cold water feed pressure sensor*)
(*============================================================================*)
AI[77].PIW:= A112_IN5;
AI[77].DiagCode:= int_to_word(A112_IN5);
AI[77].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0023 Cold water feed temperature sensor*)
(*============================================================================*)
AI[78].PIW:= A112_IN6;
AI[78].DiagCode:= int_to_word(A112_IN6);
AI[78].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT0027 Return water pressure sensor*)
(*============================================================================*)
AI[79].PIW:= A112_IN7;
AI[79].DiagCode:= int_to_word(A112_IN7);
AI[79].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0028 Return water temperature sensor*)
(*============================================================================*)
AI[80].PIW:= A113_IN0;
AI[80].DiagCode:= int_to_word(A113_IN0);
AI[80].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT0031 Feed water pressure sensor*)
(*============================================================================*)
AI[81].PIW:= A113_IN1;
AI[81].DiagCode:= int_to_word(A113_IN1);
AI[81].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0032 Feed water temperature sensor*)
(*============================================================================*)
AI[82].PIW:= A113_IN2;
AI[82].DiagCode:= int_to_word(A113_IN2);
AI[82].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT0035 Return water pressure sensor*)
(*============================================================================*)
AI[83].PIW:= A113_IN3;
AI[83].DiagCode:= int_to_word(A113_IN3);
AI[83].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0036 Return water temperature sensor*)
(*============================================================================*)
AI[84].PIW:= A113_IN4;
AI[84].DiagCode:= int_to_word(A113_IN4);
AI[84].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT0039 Feed water pressure sensor*)
(*============================================================================*)
AI[85].PIW:= A113_IN5;
AI[85].DiagCode:= int_to_word(A113_IN5);
AI[85].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0040 Feed water temperature sensor*)
(*============================================================================*)
AI[86].PIW:= A113_IN6;
AI[86].DiagCode:= int_to_word(A113_IN6);
AI[86].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT0041 Hot water return pressure sensor*)
(*============================================================================*)
AI[87].PIW:= A113_IN7;
AI[87].DiagCode:= int_to_word(A113_IN7);
AI[87].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0042 Hot water return temperature sensor*)
(*============================================================================*)
AI[88].PIW:= A114_IN0;
AI[88].DiagCode:= int_to_word(A114_IN0);
AI[88].CW.bar_kgf:= false;

(*============================================================================*)
	(*PT0046 Hot water feed pressure sensor*)
(*============================================================================*)
AI[89].PIW:= A114_IN1;
AI[89].DiagCode:= int_to_word(A114_IN1);
AI[89].CW.bar_kgf:= true;

(*============================================================================*)
	(*TT0047 Hot water feed temperature sensor*)
(*============================================================================*)
AI[90].PIW:= A114_IN2;
AI[90].DiagCode:= int_to_word(A114_IN2);
AI[90].CW.bar_kgf:= false;

(*============================================================================*)
	(*TV7001 Valve actual position*)
(*============================================================================*)
AI[91].Ymin:= 0.0;
AI[91].Ymax:= 100.0;
AI[91].PIW:= A114_IN3;
AI[91].DiagCode:= int_to_word(A114_IN3);
AI[91].CW.bar_kgf:= false;

(*============================================================================*)
	(*TV8019 Valve actual position*)
(*============================================================================*)
AI[92].Ymin:= 0.0;
AI[92].Ymax:= 100.0;
AI[92].PIW:= A114_IN4;
AI[92].DiagCode:= int_to_word(A114_IN4);
AI[92].CW.bar_kgf:= false;

(*============================================================================*)
	(*TV9008 Valve actual position*)
(*============================================================================*)
AI[93].Ymin:= 0.0;
AI[93].Ymax:= 100.0;
AI[93].PIW:= A114_IN5;
AI[93].DiagCode:= int_to_word(A114_IN5);
AI[93].CW.bar_kgf:= false;

(*============================================================================*)
	(*FE Supply water flow*)
(*============================================================================*)
AI[94].PIW:= A114_IN6;
AI[94].DiagCode:= int_to_word(A114_IN6);
AI[94].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[95].PIW:= A114_IN7;
AI[95].DiagCode:= int_to_word(A114_IN7);
AI[95].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[96].PIW:= A115_IN0;
AI[96].DiagCode:= int_to_word(A115_IN0);
AI[96].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[97].PIW:= A115_IN1;
AI[97].DiagCode:= int_to_word(A115_IN1);
AI[97].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[98].PIW:= A115_IN2;
AI[98].DiagCode:= int_to_word(A115_IN2);
AI[98].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[99].PIW:= A115_IN3;
AI[99].DiagCode:= int_to_word(A115_IN3);
AI[99].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[100].PIW:= A115_IN4;
AI[100].DiagCode:= int_to_word(A115_IN4);
AI[100].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[101].PIW:= A115_IN5;
AI[101].DiagCode:= int_to_word(A115_IN5);
AI[101].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[102].PIW:= A115_IN6;
AI[102].DiagCode:= int_to_word(A115_IN6);
AI[102].CW.bar_kgf:= false;

(*============================================================================*)
	(*Reserve*)
(*============================================================================*)
AI[103].PIW:= A115_IN7;
AI[103].DiagCode:= int_to_word(A115_IN7);
AI[103].CW.bar_kgf:= false;

(*============================================================================*)
	(*Analog sensors FB processing*)
(*============================================================================*)
for i:= 0 to 103 do
	AI[i].ADC_Range:= 30000;
	SensorsFB(Snsr_strct:=AI[i],Buff:=AI_Buff[i],Aux_strct:=AI_AUX[i]);
	AI[i]:=SensorsFB.Snsr_strct;
	AI_Buff[i]:=SensorsFB.Buff;
	AI_Event[i]:=SensorsFB.Event;
	AI_AUX[i]:=SensorsFB.Aux_strct;
end_for;


(*============================================================================*)
	(*Boilers flowmeters (Promag)*)
(*============================================================================*)
MB_TO_REAL(LoWord:=SlvData_RSUNI_2[5][0],HiWord:=SlvData_RSUNI_2[5][1]);
AI[110].Ymax:=MB_TO_REAL.OUT;

MB_TO_REAL(LoWord:=SlvData_RSUNI_2[6][0],HiWord:=SlvData_RSUNI_2[6][1]);
AI[111].Ymax:=MB_TO_REAL.OUT;

MB_TO_REAL(LoWord:=SlvData_RSUNI_2[7][0],HiWord:=SlvData_RSUNI_2[7][1]);
AI[112].Ymax:=MB_TO_REAL.OUT;

MB_TO_REAL(LoWord:=SlvData_RSUNI_2[8][0],HiWord:=SlvData_RSUNI_2[8][1]);
AI[113].Ymax:=MB_TO_REAL.OUT;

MB_TO_REAL(LoWord:=SlvData_RSUNI_2[9][0],HiWord:=SlvData_RSUNI_2[9][1]);
AI[114].Ymax:=MB_TO_REAL.OUT;

(*============================================================================*)
	(*Supply flowmeter (US800)*)
(*============================================================================*)
MB_TO_REAL(LoWord:=SlvData_RSUNI_2[10][0],HiWord:=SlvData_RSUNI_2[10][1]);
AI[115].Ymax:=MB_TO_REAL.OUT;

(*============================================================================*)
	(*Flowmeters FB processing*)
(*============================================================================*)
for i:= 110 to 118 do
	AI[i].ADC_Range:= 1;
	AI[i].Ymin:= 0.0;
	AI[i].PIW:= 1;
	AI[i].CW.bar_kgf:= false;

	SensorsFB(Snsr_strct:=AI[i],Buff:=AI_Buff[i],Aux_strct:=AI_AUX[i]);
	AI[i]:=SensorsFB.Snsr_strct;
	AI_Buff[i]:=SensorsFB.Buff;
	AI_Event[i]:=SensorsFB.Event;
	AI_AUX[i]:=SensorsFB.Aux_strct;
end_for;
(*@KEY@: END_WORKSHEET *)
END_PROGRAM
